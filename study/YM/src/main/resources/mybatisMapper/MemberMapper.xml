<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.meeting_site_project.YM.mapper.MemberMapper">

    <select id="getCnt2" resultType="Integer">
        select count(*) from member
    </select>

    <insert id="insertMember" parameterType="JoinMember">
        INSERT INTO member VALUES (#{userId}, #{userName}, #{userPicture}, #{picturePath} ,#{userMbti}, #{userPassword}, #{userInfo}, 0, #{birthday}, #{nickName}, #{emailId}, #{emailDomain}, sysdate, 0)
    </insert>

    <select id="selectByIdPassword" resultType="member" parameterType="LoginCommand">
        SELECT * FROM member WHERE userId=#{userId} AND userPassword = #{userPassword}
    </select>

    <select id="selectById" resultType="member" parameterType="String">
        SELECT * FROM member WHERE userID=#{userId}
    </select>

    <select id="selectByNickName" resultType="member" parameterType="String">
        SELECT * FROM member WHERE nickName=#{nickName}
    </select>

    <select id="selectByEmail" resultType="member" parameterType="String">
        SELECT * FROM member WHERE emailId=#{emailId} AND emailDomain=#{emailDomain}
    </select>

    <select id="selectByPassword" resultType="member" parameterType="String">
        SELECT * FROM member WHERE userPassword=#{userPassword} AND userId=#{userId}
    </select>

    <update id="profileUpdate" parameterType="ProfileUpdate">
        UPDATE member SET userName=#{userName},
        <if test="userPicture != null">userPicture=#{userPicture},</if>
        <if test="picturePath != null">picturePath=#{picturePath},</if>
        userMbti=#{userMbti}, userInfo=#{userInfo}, birthday=#{birthday}, nickName=#{nickName}
        WHERE userId = #{userId}
    </update>

    <select id="findId" resultType="member" parameterType="FindId">
        SELECT * FROM member WHERE userName=#{userName} AND emailId=#{emailId} AND emailDomain=#{emailDomain}
    </select>

    <select id="findPassword" resultType="member" parameterType="FindId">
        SELECT * FROM member WHERE userId=#{userId} AND emailId=#{emailId} AND emailDomain=#{emailDomain}
    </select>

    <update id="changePassword" parameterType="ChangePassword">
        UPDATE member SET userPassword=#{userPassword} WHERE userId=#{userId}
    </update>




    <!-- 관리자를 위한 쿼리 문 -->
    <select id="getMemberListWithPaging" resultType="Member">
        <![CDATA[
        select *
        from (
            select
            rownum rn, userId, userName, nickName, signDate, userAdmin, emailId, emailDomain
            from member
            where rownum  <= #{pageNum} * #{amount}
        )
        where rn > (#{pageNum} - 1) * #{amount}
	]]>
    </select>

    <select id="getTotal" resultType="int">
        SELECT COUNT(*) FROM member
    </select>

    <select id="selectMemberById" resultType="member" parameterType="String"> <!-- 회원 수정을 위한 SELECT문 (관리자) -->
        SELECT * FROM member WHERE userId=#{userId}
    </select>
    <update id="updateMemberAdmin" parameterType="java.util.HashMap"> <!-- 회원 권한 수정 (관리자) -->
        update member set userAdmin = #{userAdmin} where userId = #{userId}
    </update>
    <delete id="deleteMemberById" parameterType="String"> <!--회원 정보 삭제 (관리자)-->
        DELETE FROM member WHERE userId=#{userId}
    </delete>

    <!-- 고객 문의 서비스 -->
    <insert id="insertAsk" parameterType="AskContent">
        INSERT INTO askList VALUES (#{askId}, #{userId}, #{subject}, #{content}, sysdate,'미해결',#{attachmentName},#{attachmentPath},'','')
    </insert>
    <select id="selectAskDetailByAskId" resultType="askContent" parameterType="String">
        SELECT * FROM askList a JOIN member m ON a.userId = m.userId WHERE a.askId=#{askId}
    </select>


    <insert id="insertFirstMeeting" parameterType="groupInfo">
        INSERT INTO groupInfo VALUES (#{groupId}, #{ownerUserId}, #{sidoName}, #{sigoonName}, #{groupName}, #{groupInfo}, #{groupNumberOfPeople}, #{groupPicture}, #{groupPicturePath},#{groupType} ,sysdate)
    </insert>

    <select id="selectByMeeting" resultType="groupInfo" parameterType="java.util.HashMap">
        SELECT * FROM groupInfo WHERE meeting = #{meeting}
    </select>
    <select id="getSearchList" resultType="member">
        SELECT * FROM member WHERE userId like '%' ||  #{userId} || '%'
    </select>

    <select id="selectGroupInfoById" resultType="groupInfo" parameterType="String">
        SELECT * FROM groupinfo g JOIN groupbykeyword k ON g.groupId = k.groupId WHERE g.groupId=#{groupId}
    </select>

    <select id="selectOnedayGroupList" resultType="groupInfo" parameterType="int">
        SELECT * FROM groupinfo g JOIN groupbykeyword k ON g.groupId = k.groupId WHERE groupType = #{groupType} ORDER BY dbms_random.value
    </select>

    <select id="selectRegulardayGroupList" resultType="groupInfo" parameterType="int">
        SELECT * FROM groupinfo g JOIN groupbykeyword k ON g.groupId = k.groupid WHERE groupType = #{groupType} ORDER BY dbms_random.value
    </select>

    <select id="selectOnedayKeywordByGroupList" resultType="groupInfo">
        SELECT * FROM groupInfo g JOIN groupbykeyword k ON g.groupId = k.groupid
        WHERE firstKeyword = #{firstKeyword} and groupType=#{groupType} ORDER BY dbms_random.value
    </select>

    <select id="selectKeywords" resultType="keyword">
        SELECT * FROM keyword
    </select>
    <!-- 공지 사항 서비스 -->
    <select id="selectNoticeList" resultType="Notices">
        SELECT * FROM notices

    </select>
    <select id="selectFirstKeywordList" resultType="Keyword">
        SELECT DISTINCT firstKeyword FROM keyword
    </select>

    <select id="selectSecondKeywordList" parameterType="String" resultType="Keyword">
        SELECT secondKeyword FROM keyword WHERE firstKeyword=#{firstKeyword}
    </select>
    <insert id="insertGroupByKeyword" parameterType="groupInfo">
        INSERT INTO groupByKeyword VALUES (#{groupId}, #{firstKeyword}, #{secondKeyword})
    </insert>

    <update id="updateMeeting" parameterType="groupInfo">
        UPDATE groupInfo SET groupName=#{groupName},
        <if test="groupPicture != null">groupPicture=#{groupPicture},</if>
        <if test="groupPicturePath != null">groupPicturePath=#{groupPicturePath},</if>
        groupNumberOfPeople=#{groupNumberOfPeople}, groupInfo=#{groupInfo} WHERE groupId=#{groupId}
    </update>

    <update id="updateGroupKeyword" parameterType="groupInfo">
        UPDATE groupByKeyword SET firstKeyword=#{firstKeyword}, secondKeyword=#{secondKeyword}
        WHERE groupId = #{groupId}
    </update>

    <delete id="deleteGroup" parameterType="String">
        DELETE FROM groupInfo WHERE groupId=#{groupId}
    </delete>

    <!-- 그룹의 owner변경 -->
    <update id="updateGroupOwnerIdByUserIdAndGroupId" >
        UPDATE groupInfo SET ownerUserId=#{userId} WHERE groupId=#{groupId}
    </update>
</mapper>